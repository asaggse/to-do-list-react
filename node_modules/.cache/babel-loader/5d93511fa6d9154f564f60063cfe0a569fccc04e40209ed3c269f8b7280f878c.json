{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alessandro\\\\Documents\\\\React\\\\to-do-list-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  function handleAddTask(event) {\n    event.preventDefault();\n    if (newTask.trim() !== '') {\n      setTasks([...tasks, {\n        text: newTask,\n        completed: false\n      }]);\n      setNewTask('');\n    }\n  }\n  function handleRemoveTask(index) {\n    const updatedTasks = [...tasks];\n    updatedTasks.splice(index, 1);\n    setTasks(updatedTasks);\n  }\n  function handleToggleComplete(index) {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].completed = !updatedTasks[index].completed;\n    setTasks(updatedTasks);\n  }\n  function clearList() {\n    setTasks([]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddTask,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask,\n        placeholder: \"Add a task...\",\n        onChange: event => setNewTask(event.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"taskList\",\n      children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: task.completed ? 'completed' : '',\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"completeBtn\",\n          onClick: () => handleToggleComplete(index),\n          children: \"\\u2714\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), task.text, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"removeBtn\",\n          onClick: () => handleRemoveTask(index),\n          children: \"\\u274C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clearList,\n      children: \"Clear List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MMRu7H+sKP7rEuK8M8zT6HaT89w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","newTask","setNewTask","handleAddTask","event","preventDefault","trim","text","completed","handleRemoveTask","index","updatedTasks","splice","handleToggleComplete","clearList","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","placeholder","onChange","target","required","id","map","task","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Alessandro/Documents/React/to-do-list-react/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n\n  function handleAddTask(event) {\n    event.preventDefault();\n    if (newTask.trim() !== '') {\n      setTasks([...tasks, { text: newTask, completed: false }]);\n      setNewTask('');\n    }\n  }\n\n  function handleRemoveTask(index) {\n    const updatedTasks = [...tasks];\n    updatedTasks.splice(index, 1);\n    setTasks(updatedTasks);\n  }\n\n  function handleToggleComplete(index) {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].completed = !updatedTasks[index].completed;\n    setTasks(updatedTasks);\n  }\n\n  function clearList() {\n    setTasks([]);\n  }\n  \n  return (\n    <div className=\"container\">\n      <h1>To-Do List</h1>\n      <form onSubmit={handleAddTask}>\n        <input\n          type=\"text\"\n          value={newTask}\n          placeholder=\"Add a task...\"\n          onChange={(event) => setNewTask(event.target.value)}\n          required\n        />\n        <button type=\"submit\">Add</button>\n      </form>\n      <ul id=\"taskList\">\n        {tasks.map((task, index) => (\n          <li key={index} className={task.completed ? 'completed' : ''}>\n            <button className=\"completeBtn\" onClick={() => handleToggleComplete(index)}>\n              {/* {task.completed ? '✔' : '✔'} */}\n              ✔\n            </button>\n            {task.text}\n            <button className=\"removeBtn\" onClick={() => handleRemoveTask(index)}>\n              ❌\n            </button>\n          </li>\n        ))}\n      </ul>\n      <button onClick={clearList}>Clear List</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}